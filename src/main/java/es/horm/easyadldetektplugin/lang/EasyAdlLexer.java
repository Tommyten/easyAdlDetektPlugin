// Generated from java-escape by ANTLR 4.11.1
package es.horm.easyadldetektplugin.lang;

import com.yuvalshavit.antlr4.DenterHelper;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class EasyAdlLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, COMMENT=2, SYSTEM=3, COMPONENT=4, ID=5, ARGUMENT=6, NL=7, WS=8;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "COMMENT", "SYSTEM", "COMPONENT", "ID", "ARGUMENT", "NL", "WS", 
			"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", 
			"O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "':'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, "COMMENT", "SYSTEM", "COMPONENT", "ID", "ARGUMENT", "NL", 
			"WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	  private final DenterHelper denter = DenterHelper.builder()
	    .nl(NL)
	    .indent(EasyAdlParser.INDENT)
	    .dedent(EasyAdlParser.DEDENT)
	    .pullToken(EasyAdlLexer.super::nextToken);

	  @Override
	  public Token nextToken() {
	    return denter.nextToken();
	  }


	public EasyAdlLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "EasyAdl.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\b\u00b3\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0005\u0001J\b\u0001"+
		"\n\u0001\f\u0001M\t\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0004\u0004c\b\u0004"+
		"\u000b\u0004\f\u0004d\u0001\u0005\u0001\u0005\u0004\u0005i\b\u0005\u000b"+
		"\u0005\f\u0005j\u0001\u0005\u0001\u0005\u0001\u0006\u0003\u0006p\b\u0006"+
		"\u0001\u0006\u0001\u0006\u0005\u0006t\b\u0006\n\u0006\f\u0006w\t\u0006"+
		"\u0001\u0007\u0004\u0007z\b\u0007\u000b\u0007\f\u0007{\u0001\u0007\u0001"+
		"\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001\u000b\u0001"+
		"\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000f"+
		"\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0012"+
		"\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0015"+
		"\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0018"+
		"\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001b"+
		"\u0001\u001b\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0001\u001e"+
		"\u0001\u001e\u0001\u001f\u0001\u001f\u0001 \u0001 \u0001!\u0001!\u0001"+
		"j\u0000\"\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b"+
		"\u0006\r\u0007\u000f\b\u0011\u0000\u0013\u0000\u0015\u0000\u0017\u0000"+
		"\u0019\u0000\u001b\u0000\u001d\u0000\u001f\u0000!\u0000#\u0000%\u0000"+
		"\'\u0000)\u0000+\u0000-\u0000/\u00001\u00003\u00005\u00007\u00009\u0000"+
		";\u0000=\u0000?\u0000A\u0000C\u0000\u0001\u0000\u001e\u0002\u0000\n\n"+
		"\r\r\u0004\u000009AZ__az\u0003\u0000\n\n\r\r\"\"\u0002\u0000\t\t  \u0002"+
		"\u0000AAaa\u0002\u0000BBbb\u0002\u0000CCcc\u0002\u0000DDdd\u0002\u0000"+
		"EEee\u0002\u0000FFff\u0002\u0000GGgg\u0002\u0000HHhh\u0002\u0000IIii\u0002"+
		"\u0000JJjj\u0002\u0000KKkk\u0002\u0000LLll\u0002\u0000MMmm\u0002\u0000"+
		"NNnn\u0002\u0000OOoo\u0002\u0000PPpp\u0002\u0000QQqq\u0002\u0000RRrr\u0002"+
		"\u0000SSss\u0002\u0000TTtt\u0002\u0000UUuu\u0002\u0000VVvv\u0002\u0000"+
		"WWww\u0002\u0000XXxx\u0002\u0000YYyy\u0002\u0000ZZzz\u009e\u0000\u0001"+
		"\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005"+
		"\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001"+
		"\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000"+
		"\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0001E\u0001\u0000\u0000"+
		"\u0000\u0003G\u0001\u0000\u0000\u0000\u0005P\u0001\u0000\u0000\u0000\u0007"+
		"W\u0001\u0000\u0000\u0000\tb\u0001\u0000\u0000\u0000\u000bf\u0001\u0000"+
		"\u0000\u0000\ro\u0001\u0000\u0000\u0000\u000fy\u0001\u0000\u0000\u0000"+
		"\u0011\u007f\u0001\u0000\u0000\u0000\u0013\u0081\u0001\u0000\u0000\u0000"+
		"\u0015\u0083\u0001\u0000\u0000\u0000\u0017\u0085\u0001\u0000\u0000\u0000"+
		"\u0019\u0087\u0001\u0000\u0000\u0000\u001b\u0089\u0001\u0000\u0000\u0000"+
		"\u001d\u008b\u0001\u0000\u0000\u0000\u001f\u008d\u0001\u0000\u0000\u0000"+
		"!\u008f\u0001\u0000\u0000\u0000#\u0091\u0001\u0000\u0000\u0000%\u0093"+
		"\u0001\u0000\u0000\u0000\'\u0095\u0001\u0000\u0000\u0000)\u0097\u0001"+
		"\u0000\u0000\u0000+\u0099\u0001\u0000\u0000\u0000-\u009b\u0001\u0000\u0000"+
		"\u0000/\u009d\u0001\u0000\u0000\u00001\u009f\u0001\u0000\u0000\u00003"+
		"\u00a1\u0001\u0000\u0000\u00005\u00a3\u0001\u0000\u0000\u00007\u00a5\u0001"+
		"\u0000\u0000\u00009\u00a7\u0001\u0000\u0000\u0000;\u00a9\u0001\u0000\u0000"+
		"\u0000=\u00ab\u0001\u0000\u0000\u0000?\u00ad\u0001\u0000\u0000\u0000A"+
		"\u00af\u0001\u0000\u0000\u0000C\u00b1\u0001\u0000\u0000\u0000EF\u0005"+
		":\u0000\u0000F\u0002\u0001\u0000\u0000\u0000GK\u0005#\u0000\u0000HJ\b"+
		"\u0000\u0000\u0000IH\u0001\u0000\u0000\u0000JM\u0001\u0000\u0000\u0000"+
		"KI\u0001\u0000\u0000\u0000KL\u0001\u0000\u0000\u0000LN\u0001\u0000\u0000"+
		"\u0000MK\u0001\u0000\u0000\u0000NO\u0006\u0001\u0000\u0000O\u0004\u0001"+
		"\u0000\u0000\u0000PQ\u00035\u001a\u0000QR\u0003A \u0000RS\u00035\u001a"+
		"\u0000ST\u00037\u001b\u0000TU\u0003\u0019\f\u0000UV\u0003)\u0014\u0000"+
		"V\u0006\u0001\u0000\u0000\u0000WX\u0003\u0015\n\u0000XY\u0003-\u0016\u0000"+
		"YZ\u0003)\u0014\u0000Z[\u0003/\u0017\u0000[\\\u0003-\u0016\u0000\\]\u0003"+
		"+\u0015\u0000]^\u0003\u0019\f\u0000^_\u0003+\u0015\u0000_`\u00037\u001b"+
		"\u0000`\b\u0001\u0000\u0000\u0000ac\u0007\u0001\u0000\u0000ba\u0001\u0000"+
		"\u0000\u0000cd\u0001\u0000\u0000\u0000db\u0001\u0000\u0000\u0000de\u0001"+
		"\u0000\u0000\u0000e\n\u0001\u0000\u0000\u0000fh\u0005\"\u0000\u0000gi"+
		"\b\u0002\u0000\u0000hg\u0001\u0000\u0000\u0000ij\u0001\u0000\u0000\u0000"+
		"jk\u0001\u0000\u0000\u0000jh\u0001\u0000\u0000\u0000kl\u0001\u0000\u0000"+
		"\u0000lm\u0005\"\u0000\u0000m\f\u0001\u0000\u0000\u0000np\u0005\r\u0000"+
		"\u0000on\u0001\u0000\u0000\u0000op\u0001\u0000\u0000\u0000pq\u0001\u0000"+
		"\u0000\u0000qu\u0005\n\u0000\u0000rt\u0005 \u0000\u0000sr\u0001\u0000"+
		"\u0000\u0000tw\u0001\u0000\u0000\u0000us\u0001\u0000\u0000\u0000uv\u0001"+
		"\u0000\u0000\u0000v\u000e\u0001\u0000\u0000\u0000wu\u0001\u0000\u0000"+
		"\u0000xz\u0007\u0003\u0000\u0000yx\u0001\u0000\u0000\u0000z{\u0001\u0000"+
		"\u0000\u0000{y\u0001\u0000\u0000\u0000{|\u0001\u0000\u0000\u0000|}\u0001"+
		"\u0000\u0000\u0000}~\u0006\u0007\u0001\u0000~\u0010\u0001\u0000\u0000"+
		"\u0000\u007f\u0080\u0007\u0004\u0000\u0000\u0080\u0012\u0001\u0000\u0000"+
		"\u0000\u0081\u0082\u0007\u0005\u0000\u0000\u0082\u0014\u0001\u0000\u0000"+
		"\u0000\u0083\u0084\u0007\u0006\u0000\u0000\u0084\u0016\u0001\u0000\u0000"+
		"\u0000\u0085\u0086\u0007\u0007\u0000\u0000\u0086\u0018\u0001\u0000\u0000"+
		"\u0000\u0087\u0088\u0007\b\u0000\u0000\u0088\u001a\u0001\u0000\u0000\u0000"+
		"\u0089\u008a\u0007\t\u0000\u0000\u008a\u001c\u0001\u0000\u0000\u0000\u008b"+
		"\u008c\u0007\n\u0000\u0000\u008c\u001e\u0001\u0000\u0000\u0000\u008d\u008e"+
		"\u0007\u000b\u0000\u0000\u008e \u0001\u0000\u0000\u0000\u008f\u0090\u0007"+
		"\f\u0000\u0000\u0090\"\u0001\u0000\u0000\u0000\u0091\u0092\u0007\r\u0000"+
		"\u0000\u0092$\u0001\u0000\u0000\u0000\u0093\u0094\u0007\u000e\u0000\u0000"+
		"\u0094&\u0001\u0000\u0000\u0000\u0095\u0096\u0007\u000f\u0000\u0000\u0096"+
		"(\u0001\u0000\u0000\u0000\u0097\u0098\u0007\u0010\u0000\u0000\u0098*\u0001"+
		"\u0000\u0000\u0000\u0099\u009a\u0007\u0011\u0000\u0000\u009a,\u0001\u0000"+
		"\u0000\u0000\u009b\u009c\u0007\u0012\u0000\u0000\u009c.\u0001\u0000\u0000"+
		"\u0000\u009d\u009e\u0007\u0013\u0000\u0000\u009e0\u0001\u0000\u0000\u0000"+
		"\u009f\u00a0\u0007\u0014\u0000\u0000\u00a02\u0001\u0000\u0000\u0000\u00a1"+
		"\u00a2\u0007\u0015\u0000\u0000\u00a24\u0001\u0000\u0000\u0000\u00a3\u00a4"+
		"\u0007\u0016\u0000\u0000\u00a46\u0001\u0000\u0000\u0000\u00a5\u00a6\u0007"+
		"\u0017\u0000\u0000\u00a68\u0001\u0000\u0000\u0000\u00a7\u00a8\u0007\u0018"+
		"\u0000\u0000\u00a8:\u0001\u0000\u0000\u0000\u00a9\u00aa\u0007\u0019\u0000"+
		"\u0000\u00aa<\u0001\u0000\u0000\u0000\u00ab\u00ac\u0007\u001a\u0000\u0000"+
		"\u00ac>\u0001\u0000\u0000\u0000\u00ad\u00ae\u0007\u001b\u0000\u0000\u00ae"+
		"@\u0001\u0000\u0000\u0000\u00af\u00b0\u0007\u001c\u0000\u0000\u00b0B\u0001"+
		"\u0000\u0000\u0000\u00b1\u00b2\u0007\u001d\u0000\u0000\u00b2D\u0001\u0000"+
		"\u0000\u0000\u0007\u0000Kdjou{\u0002\u0006\u0000\u0000\u0000\u0001\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}